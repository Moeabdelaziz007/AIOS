{
  "name": "aios-advanced-features",
  "version": "1.0.0",
  "description": "AIOS Advanced Features with Chaos Testing, Load Testing, and CI/CD Integration",
  "main": "server/aiosAPIServer.js",
  "scripts": {
    "start": "node server/aiosAPIServer.js",
    "dev": "nodemon server/aiosAPIServer.js",
    "test": "node testAIOSAdvancedFeatures.js",
    "test:chaos": "node testChaosTesting.js",
    "test:load": "node testLoadTesting.js",
    "test:comprehensive": "node testComprehensiveAdvancedFeatures.js",
    "test:all": "npm run test && npm run test:chaos && npm run test:load && npm run test:comprehensive",
    "test:coverage": "nyc npm test",
    "test:backend": "cd server && npm test",
    "test:frontend": "cd client && npm test -- --coverage --watchAll=false",
    "test:integration": "jest --testPathPattern=integration",
    "lint": "eslint server/ test*.js",
    "lint:fix": "eslint server/ test*.js --fix",
    "format": "prettier --write server/ test*.js",
    "format:check": "prettier --check server/ test*.js",
    "build": "echo 'Building AIOS Advanced Features...' && echo 'Build completed'",
    "chaos:start": "node -e \"const ChaosTestingSystem = require('./server/chaosTestingSystem'); const chaos = new ChaosTestingSystem(); chaos.initialize().then(() => chaos.startChaosTesting('medium'));\"",
    "chaos:stop": "node -e \"const ChaosTestingSystem = require('./server/chaosTestingSystem'); const chaos = new ChaosTestingSystem(); chaos.stopChaosTesting();\"",
    "load:test": "node -e \"const LoadTestingSystem = require('./server/loadTestingSystem'); const load = new LoadTestingSystem(); load.initialize().then(() => load.startLoadTest('linearRamp'));\"",
    "deploy:staging": "echo 'Deploying to staging...' && echo 'Staging deployment completed'",
    "deploy:production": "echo 'Deploying to production...' && echo 'Production deployment completed'",
    "health:check": "node -e \"const AIOSAPIServer = require('./server/aiosAPIServer'); const server = new AIOSAPIServer(); server.initialize().then(() => console.log('Health check passed'));\"",
    "metrics:export": "node -e \"const AdvancedLoggingSystem = require('./server/advancedLoggingSystem'); const logging = new AdvancedLoggingSystem(); logging.initialize().then(() => logging.exportLogs());\"",
    "agents:discover": "node -e \"const AgentAutoDiscovery = require('./server/agentAutoDiscovery'); const discovery = new AgentAutoDiscovery(); discovery.initialize().then(() => console.log('Agent discovery completed'));\"",
    "dashboard:start": "node -e \"const AgentDashboard = require('./server/agentDashboard'); const dashboard = new AgentDashboard(); dashboard.initialize().then(() => console.log('Dashboard started'));\"",
    "lifecycle:status": "node -e \"const AgentLifecycleManager = require('./server/agentLifecycleManager'); const lifecycle = new AgentLifecycleManager(); lifecycle.initialize().then(() => console.log('Lifecycle status checked'));\""
  },
  "keywords": [
    "aios",
    "advanced-features",
    "chaos-testing",
    "load-testing",
    "ci-cd",
    "agent-management",
    "monitoring",
    "resilience"
  ],
  "author": "AIOS Team",
  "license": "MIT",
  "dependencies": {
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.21.2",
    "firebase": "^12.3.0",
    "firebase-admin": "^13.5.0",
    "fs": "^0.0.1-security",
    "path": "^0.12.7",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "winston": "^3.17.0",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "eslint": "^8.50.0",
    "nodemon": "^3.0.1",
    "nyc": "^15.1.0",
    "prettier": "^3.0.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/aios-advanced-features.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/aios-advanced-features/issues"
  },
  "homepage": "https://github.com/your-org/aios-advanced-features#readme",
  "packageManager": "yarn@1.22.22+sha512.a6b2f7906b721bba3d67d4aff083df04dad64c399707841b7acf00f6b133b7ac24255f2652fa22ae3534329dc6180534e98d17432037ff6fd140556e2bb3137e"
}
